ruby:
  name_space  = deserialize(name)

#tab-controller.col-md-3.col-lg-3
  div.bs-sidebar
    ul.nav.bs-sidenav
      li class="active"
        a.select-tab data-toggle="tab" href="#tab_#{parameterize name_space.name}" = name_space.name

      == method_list(name_space, { :show_empty_groups => true }).gsub('>pod ','>')

#content-container.col-md-9.col-lg-9
  #tab-content.tab-content

    // Pod Command
    div.tab-pane id="tab_#{parameterize name_space.name}" class="active"
      h2 = name_space.name
      == link_doc_string name_space.html_description

    // Groups
    - for group in name_space.groups
      div.tab-pane id="tab_group_#{parameterize group.name}"
        h2 = group.name
        // TODO not sure where is better to store those descriptions (markdown files)?
        - case group.name
        - when 'Installation'
          p The commands listed in this group provide support for installing
            and integrating the dependencies specified in a Podfile.

          p Following is presented the basic workflow for integrating CocoaPods in a user project.
          pre $ touch Podfile
              $ vim Podfile
              $ pod install
          pre $ open *.xcworkspace
          pre $ vim podfile
              $ pod install
          pre $ pod outdated
          pre $ pod update

          h3 Commands
        - for command in group.meths
          p
            code
              a data-toggle="tab" href="#tab_#{parameterize command.name}" = command.name


    // Commands
    - for command in name_space.meths
      div.tab-pane id="tab_#{parameterize command.name}"

        h2
          = command.name

        - if command.available_since
          h5
            = "Available since v#{command.available_since}."
        br


        == link_doc_string command.html_description

        - unless command.options.empty?
          h3 Options:

          table.inherited_options
            - for (name, html_description) in command.options
              tr
                td
                  p
                    b = name
                td 
                  == html_description

        - unless command.parent_options.empty?
          h3 Inherited options:

          table.inherited_options
            - for (name, html_description) in command.parent_options
              tr
                td
                  p
                    b = name
                td 
                  == html_description
              
